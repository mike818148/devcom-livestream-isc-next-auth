/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/aqsfhmazNnx
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Arimo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

arimo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
'use client'
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select"
import LogoutButton from "./logout-button"
import { RequestableObject } from "sailpoint-api-client"
import { useState } from "react"
import axios from "axios"

interface Props {
  name: string;
  email: string;
  selectableRoles: RequestableObject[]
}

export function AccessRequestForm({ name, email, selectableRoles }: Props) {

  const [roleId, setRoleId] = useState(null);

  const handleChange = (value: any) => {
    setRoleId(value);
  };

  const handleSubmit = async () => {
    console.log("submit")
    const body = {
      roleId: roleId
    }
    const response = await axios.post("/api/isc/access_request", body);
    console.log(response.data);
  }

  return (
    <div className="flex flex-col h-screen">
      <header className="bg-primary text-primary-foreground py-3 px-6 flex items-center justify-between">
        <div className="flex items-center gap-3">
          <Avatar className="h-8 w-8">
            <AvatarImage src="/placeholder-user.jpg" alt="@shadcn" />
            <AvatarFallback>XY</AvatarFallback>
          </Avatar>
          <div className="grid gap-0.5 text-sm">
            <div className="font-medium">{name}</div>
            <div className="text-muted-foreground">{email}</div>
          </div>
        </div>
        <LogoutButton />
      </header>
      <div className="flex-1 bg-background p-8 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardHeader>
            <CardTitle>Access Request</CardTitle>
            <CardDescription>Fill out the form to request access to ISC.</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="access-type">Role</Label>
              <Select onValueChange={handleChange}>
                <SelectTrigger id="access-type">
                  <SelectValue placeholder="Select role" />
                </SelectTrigger>
                <SelectContent>
                  {selectableRoles.map((role) => <SelectItem key={role.id} value={role.id!}>{role.name}</SelectItem>)}
                </SelectContent>
              </Select>
            </div>
          </CardContent>
          <CardFooter>
            <Button onClick={handleSubmit} className="ml-auto">
              Submit Request
            </Button>
          </CardFooter>
        </Card>
      </div>
    </div >
  )
}
